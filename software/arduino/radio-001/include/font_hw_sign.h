#ifndef _FONT_HW_SIGN_H_
#define _FONT_HW_SIGN_H_

#include "font_aux.h"

static const uint8_t FONT_HW_SIGN_DATA[] PROGMEM = {
    // SP
    0, 0, 0, 0, 0, 0,
    // !
    0, 0, 0, 0, 0, 0,
    // "
    0, 0, 0, 0, 0, 0,
    // #
    0, 0, 0, 0, 0, 0,
    // $
    0, 0, 0, 0, 0, 0,
    // %
    0, 0, 0, 0, 0, 0,
    // &
    0, 0, 0, 0, 0, 0,
    // `
    0, 0, 0, 0, 0, 0,
    // (
    0, 0, 0, 0, 0, 0,
    // )
    0, 0, 0, 0, 0, 0,
    // *
    0, 0, 0, 0, 0, 0,
    // +
    0, 0, 0, 0, 0, 0,
    // ,
    0, 0, 0, 0, 0, 0,
    // -
    0, 0, 0, 0, 0, 0,
    // .
    RB(00000000),
    RB(01100000),
    RB(01100000),
    RB(00000000),
    RB(00000000),
    0,
    // /
    0, 0, 0, 0, 0, 0,
    // 0
    RB(00111110),
    RB(01010001),
    RB(01001001),
    RB(01000101),
    RB(00111110),
    0,
    // 1
    RB(00000000),
    RB(01000010),
    RB(01111111),
    RB(01000000),
    RB(00000000),
    0,
    // 2
    RB(01100010),
    RB(01010001),
    RB(01001001),
    RB(01001001),
    RB(01000110),
    0,
    // 3
    RB(00100010),
    RB(01000001),
    RB(01001001),
    RB(01001001),
    RB(00110110),
    0,
    // 4
    RB(00011000),
    RB(00010100),
    RB(00010010),
    RB(01111111),
    RB(00010000),
    0,
    // 5
    RB(00100111),
    RB(01000101),
    RB(01000101),
    RB(01000101),
    RB(00111001),
    0,
    // 6
    RB(00111100),
    RB(01001010),
    RB(01001001),
    RB(01001001),
    RB(00110000),
    0,
    // 7
    RB(00000001),
    RB(01110001),
    RB(00001001),
    RB(00000101),
    RB(00000011),
    0,
    // 8
    RB(00110110),
    RB(01001001),
    RB(01001001),
    RB(01001001),
    RB(00110110),
    0,
    // 9
    RB(00000110),
    RB(01001001),
    RB(01001001),
    RB(00101001),
    RB(00011110),
    0,
    // :
    0, 0, 0, 0, 0, 0,
    // ;
    0, 0, 0, 0, 0, 0,
    // <
    0, 0, 0, 0, 0, 0,
    // =
    0, 0, 0, 0, 0, 0,
    // >
    0, 0, 0, 0, 0, 0,
    // ?
    0, 0, 0, 0, 0, 0,

    // @
    0, 0, 0, 0, 0, 0,
    // A
    RB(01111100),
    RB(00010010),
    RB(00010001),
    RB(00010010),
    RB(01111100),
    0,
    // B
    RB(01111111),
    RB(01001001),
    RB(01001001),
    RB(01001001),
    RB(00110110),
    0,
    // C
    RB(00111110),
    RB(01000001),
    RB(01000001),
    RB(01000001),
    RB(00100010),
    0,
    // D
    RB(01111111),
    RB(01000001),
    RB(01000001),
    RB(00100010),
    RB(00011100),
    0,
    // E
    RB(01111111),
    RB(01001001),
    RB(01001001),
    RB(01001001),
    RB(01000001),
    0,
    // F
    RB(01111111),
    RB(00001001),
    RB(00001001),
    RB(00001001),
    RB(00000001),
    0,
    // G
    RB(00111110),
    RB(01000001),
    RB(01001001),
    RB(01001001),
    RB(01111010),
    0,
    // H
    RB(01111111),
    RB(00001000),
    RB(00001000),
    RB(00001000),
    RB(01111111),
    0,
    // I
    RB(00000000),
    RB(01000001),
    RB(01111111),
    RB(01000001),
    RB(00000000),
    0,
    // J
    RB(00100000),
    RB(01000000),
    RB(01000001),
    RB(00111111),
    RB(00000001),
    0,
    // K
    RB(01111111),
    RB(00001000),
    RB(00010100),
    RB(00100010),
    RB(01000001),
    0,
    // L
    RB(01111111),
    RB(01000000),
    RB(01000000),
    RB(01000000),
    RB(01000000),
    0,
    // M
    RB(01111111),
    RB(00000010),
    RB(00001100),
    RB(00000010),
    RB(01111111),
    0,
    // N
    RB(01111111),
    RB(00000100),
    RB(00001000),
    RB(00010000),
    RB(01111111),
    0,
    // O
    RB(00111110),
    RB(01000001),
    RB(01000001),
    RB(01000001),
    RB(00111110),
    0,
    // P
    RB(01111111),
    RB(00001001),
    RB(00001001),
    RB(00001001),
    RB(00000110),
    0,
    // Q
    RB(00111110),
    RB(01000001),
    RB(01010001),
    RB(00100001),
    RB(01011110),
    0,
    // R
    RB(01111111),
    RB(00001001),
    RB(00011001),
    RB(00101001),
    RB(01000110),
    0,
    // S
    RB(00100110),
    RB(01001001),
    RB(01001001),
    RB(01001001),
    RB(00110010),
    0,
    // T
    RB(00000001),
    RB(00000001),
    RB(01111111),
    RB(00000001),
    RB(00000001),
    0,
    // U
    RB(00111111),
    RB(01000000),
    RB(01000000),
    RB(01000000),
    RB(00111111),
    0,
    // V
    RB(00000111),
    RB(00011000),
    RB(01100000),
    RB(00011000),
    RB(00000111),
    0,
    // W
    RB(00111111),
    RB(01000000),
    RB(00110000),
    RB(01000000),
    RB(00111111),
    0,
    // X
    RB(01100011),
    RB(00010100),
    RB(00001000),
    RB(00010100),
    RB(01100011),
    0,
    // Y
    RB(00000111),
    RB(00001000),
    RB(01110000),
    RB(00001000),
    RB(00000111),
    0,
    // Z
    RB(01100001),
    RB(01010001),
    RB(01001001),
    RB(01000101),
    RB(01000011),
    0,
    // [
    0, 0, 0, 0, 0, 0,
    // back-/
    0, 0, 0, 0, 0, 0,
    // ]
    0, 0, 0, 0, 0, 0,
    // ^
    0, 0, 0, 0, 0, 0,
    // _
    0, 0, 0, 0, 0, 0,

    // `
    0, 0, 0, 0, 0, 0,
    //a-z
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    // {
    0, 0, 0, 0, 0, 0,
    // |
    0, 0, 0, 0, 0, 0,
    // }
    0, 0, 0, 0, 0, 0,
    // ~
    0, 0, 0, 0, 0, 0,
};

#endif // _FONT_HW_SIGN_H_