#ifndef _FONT_5x5_H_
#define _FONT_5x5_H_

#include "font_aux.h"

static const uint8_t FONT_5x5_DATA[] PROGMEM = {
    // SP
    RB(00000000),
    RB(00000000),
    RB(00000000),
    RB(00000000),
    RB(00000000),
    0,
    // !
    RB(00000000),
    RB(00000000),
    RB(00010111),
    RB(00000000),
    RB(00000000),
    0,
    // "
    RB(00000000),
    RB(00000011),
    RB(00000000),
    RB(00000011),
    RB(00000000),
    0,
    // #
    RB(00001010),
    RB(00011111),
    RB(00001010),
    RB(00011111),
    RB(00001010),
    0,
    // $
    RB(00010111),
    RB(00010101),
    RB(00111111),
    RB(00010101),
    RB(00011101),
    0,
    // %
    RB(00010001),
    RB(00001000),
    RB(00000100),
    RB(00000010),
    RB(00010001),
    0,
    // &
    RB(00001010),
    RB(00010101),
    RB(00010101),
    RB(00001000),
    RB(00010100),
    0,
    // '
    RB(00000000),
    RB(00000000),
    RB(00000011),
    RB(00000000),
    RB(00000000),
    0,
    // (
    RB(00000000),
    RB(00001110),
    RB(00010001),
    RB(00000000),
    RB(00000000),
    0,
    // )
    RB(00000000),
    RB(00000000),
    RB(00010001),
    RB(00001110),
    RB(00000000),
    0,
    // *
    RB(00000000),
    RB(00000010),
    RB(00000111),
    RB(00000010),
    RB(00000000),
    0,
    // +
    RB(00000100),
    RB(00000100),
    RB(00011111),
    RB(00000100),
    RB(00000100),
    0,
    // ,
    RB(00000000),
    RB(00000000),
    RB(00011000),
    RB(00000000),
    RB(00000000),
    0,
    // -
    RB(00000100),
    RB(00000100),
    RB(00000100),
    RB(00000100),
    RB(00000100),
    0,
    // .
    RB(00000000),
    RB(00000000),
    RB(00010000),
    RB(00000000),
    RB(00000000),
    0,
    // /
    RB(00000000),
    RB(00011000),
    RB(00000100),
    RB(00000011),
    RB(00000000),
    0,

    // O
    RB(00011111),
    RB(00011001),
    RB(00010101),
    RB(00010011),
    RB(00011111),
    0,
    // 1
    RB(00000000),
    RB(00010010),
    RB(00011111),
    RB(00010000),
    RB(00000000),
    0,
    // 2
    RB(00011001),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00010010),
    0,
    // 3
    RB(00010001),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00011111),
    0,
    // 4
    RB(00000111),
    RB(00000100),
    RB(00000100),
    RB(00011111),
    RB(00000100),
    0,
    // 5
    RB(00010111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00001001),
    0,
    // 6
    RB(00011111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00011101),
    0,
    // 7
    RB(00000001),
    RB(00000001),
    RB(00011001),
    RB(00000101),
    RB(00000011),
    0,
    // 8
    RB(00011111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00011111),
    0,
    // 9
    RB(00010111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00011111),
    0,
    // :
    RB(00000000),
    RB(00000000),
    RB(00001010),
    RB(00000000),
    RB(00000000),
    0,
    // ;
    RB(00000000),
    RB(00000000),
    RB(00011010),
    RB(00000000),
    RB(00000000),
    0,
    // <
    RB(00000000),
    RB(00000100),
    RB(00001010),
    RB(00010001),
    RB(00000000),
    0,
    // >
    RB(00000000),
    RB(00010001),
    RB(00001010),
    RB(00000100),
    RB(00000000),
    0,
    // =
    RB(00001010),
    RB(00001010),
    RB(00001010),
    RB(00001010),
    RB(00001010),
    0,
    // ?
    RB(00000000),
    RB(00000010),
    RB(00000001),
    RB(00010101),
    RB(00000010),
    0,

    // @
    RB(00011111),
    RB(00010001),
    RB(00010101),
    RB(00010101),
    RB(00010111),
    0,
    // A
    RB(00011111),
    RB(00000101),
    RB(00000101),
    RB(00000101),
    RB(00011111),
    0,
    // B
    RB(00011111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00001110),
    0,
    // C
    RB(00011111),
    RB(00010001),
    RB(00010001),
    RB(00010001),
    RB(00010001),
    0,
    // D
    RB(00011111),
    RB(00010001),
    RB(00010001),
    RB(00010001),
    RB(00001110),
    0,
    // E
    RB(00011111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00010001),
    0,
    // F
    RB(00011111),
    RB(00000101),
    RB(00000101),
    RB(00000101),
    RB(00000001),
    0,
    // G
    RB(00011111),
    RB(00010001),
    RB(00010101),
    RB(00010101),
    RB(00011101),
    0,
    // H
    RB(00011111),
    RB(00000100),
    RB(00000100),
    RB(00000100),
    RB(00011111),
    0,
    // I
    RB(00010001),
    RB(00010001),
    RB(00011111),
    RB(00010001),
    RB(00010001),
    0,
    // J
    RB(00011001),
    RB(00010001),
    RB(00010001),
    RB(00011111),
    RB(00000001),
    0,
    // K
    RB(00011111),
    RB(00000100),
    RB(00001010),
    RB(00010001),
    RB(00000000),
    0,
    // L
    RB(00011111),
    RB(00010000),
    RB(00010000),
    RB(00010000),
    RB(00010000),
    0,
    // M
    RB(00011111),
    RB(00000010),
    RB(00000100),
    RB(00000010),
    RB(00011111),
    0,
    // N
    RB(00011111),
    RB(00000010),
    RB(00000100),
    RB(00001000),
    RB(00011111),
    0,
    // O
    RB(00011111),
    RB(00010001),
    RB(00010001),
    RB(00010001),
    RB(00011111),
    0,
    // P
    RB(00011111),
    RB(00000101),
    RB(00000101),
    RB(00000101),
    RB(00000111),
    0,
    // Q
    RB(00011111),
    RB(00010001),
    RB(00010001),
    RB(00011001),
    RB(00011111),
    0,
    // R
    RB(00011111),
    RB(00000101),
    RB(00000101),
    RB(00001101),
    RB(00010111),
    0,
    // S
    RB(00010111),
    RB(00010101),
    RB(00010101),
    RB(00010101),
    RB(00011101),
    0,
    // T
    RB(00000001),
    RB(00000001),
    RB(00011111),
    RB(00000001),
    RB(00000001),
    0,
    // U
    RB(00011111),
    RB(00010000),
    RB(00010000),
    RB(00010000),
    RB(00011111),
    0,
    // V
    RB(00000011),
    RB(00001100),
    RB(00010000),
    RB(00001100),
    RB(00000011),
    0,
    // W
    RB(00011111),
    RB(00010000),
    RB(00001000),
    RB(00010000),
    RB(00011111),
    0,
    // X
    RB(00010001),
    RB(00001010),
    RB(00000100),
    RB(00001010),
    RB(00010001),
    0,
    // Y
    RB(00000001),
    RB(00000010),
    RB(00011100),
    RB(00000010),
    RB(00000001),
    0,
    // Z
    RB(00010001),
    RB(00011001),
    RB(00010101),
    RB(00010011),
    RB(00010001),
    0,
    // [
    0, 0, 0, 0, 0, 0,
    // back-/
    0, 0, 0, 0, 0, 0,
    // ]
    0, 0, 0, 0, 0, 0,
    // ^
    0, 0, 0, 0, 0, 0,
    // _
    0, 0, 0, 0, 0, 0,

    // `
    0, 0, 0, 0, 0, 0,
    // a-z
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    // { | } ~
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    //0, 0, 0, 0, 0, 0,
    RB(00011111),
    RB(00011111),
    RB(00011111),
    RB(00011111),
    RB(00011111),
    RB(00011111),
};

#endif // _FONT_5x5_H_